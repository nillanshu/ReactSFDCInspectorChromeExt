chrome.runtime.onMessage.addListener((t,c,s)=>{if(t.action==="getSessionCookie"){const o=new URL(c.tab.url).hostname;let r;return o.includes("sandbox")?r=o.replace(/\.sandbox\..*$/,".sandbox.my.salesforce.com"):r=o.replace(/\.develop\..*$/,".develop.my.salesforce.com"),chrome.cookies.getAll({domain:r},e=>{const n=e.find(i=>i.name==="sid");s(n?{accessToken:n.value}:{error:"Session cookie not found"})}),!0}if(t.action==="getUserId"){const{instanceUrl:o,accessToken:r}=t;return fetch(`${o}/services/oauth2/userinfo`,{method:"GET",headers:{Authorization:`Bearer ${r}`,"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{s({userId:e.user_id})}).catch(e=>{console.error("Error retrieving user ID:",e),s({error:"Error retrieving user ID."})}),!0}if(t.action==="deployFields")return(async()=>{try{const r=await(await fetch(t.endpointUrl,{method:"POST",headers:{"Content-Type":"text/xml",SOAPAction:"Create"},body:t.soapBody})).text();s({success:!0,response:r})}catch(o){s({success:!1,error:o.message})}})(),!0;if(t.action==="deployFieldPermissions"){const{endpointUrl:o,soapBody:r}=t;return fetch(o,{method:"POST",headers:{"Content-Type":"text/xml",SOAPAction:"Create"},body:r}).then(e=>e.text()).then(e=>{s({success:!0,response:e})}).catch(e=>{s({success:!1,error:e.message})}),!0}});
